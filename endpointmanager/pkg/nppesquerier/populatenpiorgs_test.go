package nppesquerier

import (
	log "github.com/sirupsen/logrus"
	"testing"

	"github.com/onc-healthit/lantern-back-end/endpointmanager/pkg/endpointmanager/postgresql"
	"github.com/spf13/viper"
)

// The following 2 functions can be removed once https://github.com/onc-healthit/lantern-back-end/pull/29/ is merged in
func failOnError(err error) {
	if err != nil {
		log.Fatalf("%s", err)
	}
}
func setupConfig() {
	var err error

	viper.SetEnvPrefix("lantern_endptmgr")
	viper.AutomaticEnv()

	err = viper.BindEnv("dbhost")
	failOnError(err)
	err = viper.BindEnv("dbport")
	failOnError(err)
	err = viper.BindEnv("dbuser")
	failOnError(err)
	err = viper.BindEnv("dbpass")
	failOnError(err)
	err = viper.BindEnv("dbname")
	failOnError(err)
	err = viper.BindEnv("dbsslmode")
	failOnError(err)
	err = viper.BindEnv("logfile")
	failOnError(err)

	viper.SetDefault("dbhost", "localhost")
	viper.SetDefault("dbport", 5432)
	viper.SetDefault("dbsslmode", "disable")
	viper.SetDefault("logfile", "endpointmanagerLog.json")
}

func Test_ParseNPIdataLine(t *testing.T) {
	// fixture file generated by running `head -20` on the provider organization .csv downloaded from http://download.cms.gov/nppes/NPI_Files.html
	lines, err := ReadCsv("testdata/npidata_pfile_fixture.csv")
	if err != nil {
		t.Errorf("Error reading NPI data from fixture file")
	}
	// fixture file has 20 lines, we throw out the header line
	if len(lines) != 19 {
		t.Errorf("Expected %d lines to be read from CSV, got %d", 19, len(lines))
	}

	// "1497758544","2","","<UNAVAIL>","CUMBERLAND COUNTY HOSPITAL SYSTEM, INC","","","","","","","CAPE FEAR VALLEY HOME HEALTH AND HOSPICE","3","","","","","","","","3418 VILLAGE DR","","FAYETTEVILLE","NC","283044552","US","9106096740","","3418 VILLAGE DR","","FAYETTEVILLE","NC","283044552","US","9106096740","","05/23/2005","09/26/2011","","","","","NAGOWSKI","MICHAEL","","CEO","9106096700","251G00000X","HC0283","NC","Y","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","3401562","05","NC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","N","","","MR.","","","","","","","","","","","","","","","","",""
	data := ParseNPIdataLine(lines[2])
	// NPI Field
	if data.NPI != "1497758544" {
		t.Errorf("Expected NPI_ID to be %s, got %s", "1497758544", data.NPI)
	}
	// Entity Type Field
	if data.Entity_Type_Code != "2" {
		t.Errorf("Expected Entity Type to be %s, got %s", "2", data.Entity_Type_Code)
	}
	// Name Field
	if data.Provider_Organization_Name_Legal_Business_Name != "CUMBERLAND COUNTY HOSPITAL SYSTEM, INC" {
		t.Errorf("Expected Name to be %s, got %s", "CUMBERLAND COUNTY HOSPITAL SYSTEM, INC", data.Provider_Organization_Name_Legal_Business_Name)
	}
	// Secondary Name Field
	if data.Provider_Other_Organization_Name != "CAPE FEAR VALLEY HOME HEALTH AND HOSPICE" {
		t.Errorf("Expected Name to be %s, got %s", "CAPE FEAR VALLEY HOME HEALTH AND HOSPICE", data.Provider_Other_Organization_Name)
	}
	// Provider_First_Line_Business_Mailing_Address
	if data.Provider_First_Line_Business_Practice_Location_Address != "3418 VILLAGE DR" {
		t.Errorf("Expected Name to be %s, got %s", "3418 VILLAGE DR", data.Provider_First_Line_Business_Practice_Location_Address)
	}
	// Provider_Second_Line_Business_Practice_Location_Address
	if data.Provider_Second_Line_Business_Practice_Location_Address != "" {
		t.Errorf("Expected Name to be %s, got %s", "", data.Provider_Second_Line_Business_Practice_Location_Address)
	}
	// Provider_Business_Practice_Location_Address_City_Name
	if data.Provider_Business_Practice_Location_Address_City_Name != "FAYETTEVILLE" {
		t.Errorf("Expected Name to be %s, got %s", "FAYETTEVILLE", data.Provider_Business_Practice_Location_Address_City_Name)
	}
	// Provider_Business_Practice_Location_Address_State_Name
	if data.Provider_Business_Practice_Location_Address_State_Name != "NC" {
		t.Errorf("Expected Name to be %s, got %s", "NC", data.Provider_Business_Practice_Location_Address_State_Name)
	}
	// Provider_Business_Practice_Location_Address_Postal_Code
	if data.Provider_Business_Practice_Location_Address_Postal_Code != "283044552" {
		t.Errorf("Expected Name to be %s, got %s", "283044552", data.Provider_Business_Practice_Location_Address_Postal_Code)
	}
	// Healthcare_Provider_Taxonomy_Code_1
	if data.Healthcare_Provider_Taxonomy_Code_1 != "251G00000X" {
		t.Errorf("Expected Name to be %s, got %s", "251G00000X", data.Healthcare_Provider_Taxonomy_Code_1)
	}
}

func Test_ParseAndStoreNPIFile(t *testing.T) {
	setupConfig()
	store, err := postgresql.NewStore(viper.GetString("dbhost"), viper.GetInt("dbport"), viper.GetString("dbuser"), viper.GetString("dbpass"), viper.GetString("dbname"), viper.GetString("dbsslmode"))
	if err != nil {
		t.Errorf("Error creating Store type: %s", err.Error())
	}
	defer store.Close()
	parsed_orgs, err := ParseAndStoreNPIFile("testdata/npidata_pfile_fixture.csv", store)
	if err != nil {
		t.Errorf("Error Parsing NPI File: %s", err.Error())
	}
	// Assert expected number of orgs are parsed out of fixture file
	if parsed_orgs != 3 {
		t.Errorf("Expected number or parsed orgs to be %d, got %d", 3, parsed_orgs)
	}
	// Assert NPI orgs were successfully parsed out of fixture file
	org1, err := store.GetNPIOrganizationByNPIID("1497758544")
	if org1 == nil {
		t.Errorf("Error Retriving Parsed NPI Org")
	}
	if err != nil {
		t.Errorf("Error Retriving Parsed NPI Org: %s", err.Error())
	}
	org2, err := store.GetNPIOrganizationByNPIID("1023011178")
	if org2 == nil {
		t.Errorf("Error Retriving Parsed NPI Org")
	}
	if err != nil {
		t.Errorf("Error Retriving Parsed NPI Org: %s", err.Error())
	}
	org3, err := store.GetNPIOrganizationByNPIID("1023011079")
	if org3 == nil {
		t.Errorf("Error Retriving Parsed NPI Org")
	}
	if err != nil {
		t.Errorf("Error Retriving Parsed NPI Org: %s", err.Error())
	}
}

func Test_BuildNPIOrgFromNPICsvLine(t *testing.T) {
	// fixture file generated by running `head -20` on the provider organization .csv downloaded from http://download.cms.gov/nppes/NPI_Files.html
	lines, err := ReadCsv("testdata/npidata_pfile_fixture.csv")
	if err != nil {
		t.Errorf("Error reading NPI data from fixture file")
	}

	// "1497758544","2","","<UNAVAIL>","CUMBERLAND COUNTY HOSPITAL SYSTEM, INC","","","","","","","CAPE FEAR VALLEY HOME HEALTH AND HOSPICE","3","","","","","","","","3418 VILLAGE DR","","FAYETTEVILLE","NC","283044552","US","9106096740","","3418 VILLAGE DR","","FAYETTEVILLE","NC","283044552","US","9106096740","","05/23/2005","09/26/2011","","","","","NAGOWSKI","MICHAEL","","CEO","9106096700","251G00000X","HC0283","NC","Y","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","3401562","05","NC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","N","","","MR.","","","","","","","","","","","","","","","","",""
	data := ParseNPIdataLine(lines[2])
	npi_org := BuildNPIOrgFromNPICsvLine(data)
	// NPI Field
	if npi_org.NPI_ID != "1497758544" {
		t.Errorf("Expected NPI_ID to be %s, got %s", "1497758544", npi_org.NPI_ID)
	}
	// Name Field
	if npi_org.Name != "CUMBERLAND COUNTY HOSPITAL SYSTEM, INC" {
		t.Errorf("Expected Name to be %s, got %s", "CUMBERLAND COUNTY HOSPITAL SYSTEM, INC", npi_org.Name)
	}
	// Secondary Name Field
	if npi_org.SecondaryName != "CAPE FEAR VALLEY HOME HEALTH AND HOSPICE" {
		t.Errorf("Expected Name to be %s, got %s", "CAPE FEAR VALLEY HOME HEALTH AND HOSPICE", npi_org.SecondaryName)
	}
	// 	Location.Address1
	if npi_org.Location.Address1 != "3418 VILLAGE DR" {
		t.Errorf("Expected Name to be %s, got %s", "3418 VILLAGE DR", npi_org.Location.Address1)
	}
	// Location.Address2
	if npi_org.Location.Address2 != "" {
		t.Errorf("Expected Name to be %s, got %s", "", npi_org.Location.Address2)
	}
	// Location.City
	if npi_org.Location.City != "FAYETTEVILLE" {
		t.Errorf("Expected Name to be %s, got %s", "FAYETTEVILLE", npi_org.Location.City)
	}
	// Location.State
	if npi_org.Location.State != "NC" {
		t.Errorf("Expected Name to be %s, got %s", "NC", npi_org.Location.State)
	}
	// Location.ZipCode
	if npi_org.Location.ZipCode != "283044552" {
		t.Errorf("Expected Name to be %s, got %s", "283044552", npi_org.Location.ZipCode)
	}
	// Taxonomy
	if npi_org.Taxonomy != "251G00000X" {
		t.Errorf("Expected Name to be %s, got %s", "251G00000X", npi_org.Taxonomy)
	}
}
