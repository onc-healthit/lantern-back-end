version: '3'

services:
  capability_querier:
    environment:
      - LANTERN_CAPQUERY_QNAME=${LANTERN_TEST_QNAME}
      - LANTERN_ENDPTINFO_CAPQUERY_QNAME=${LANTERN_TEST_ENDPTINFO_CAPQUERY_QNAME}

  capability_receiver:
    environment:
      - LANTERN_DBHOST=postgres
      - LANTERN_QHOST=lantern-mq
      - LANTERN_CAPQUERY_QNAME=${LANTERN_TEST_QNAME}
      - LANTERN_ENDPTINFO_CAPQUERY_QNAME=${LANTERN_TEST_ENDPTINFO_CAPQUERY_QNAME}

  endpoint_manager:
    environment:
      - LANTERN_DBHOST=postgres
      - LANTERN_QHOST=lantern-mq
      - LANTERN_TEST_QUSER=${LANTERN_TEST_QUSER}
      - LANTERN_TEST_QPASSWORD=${LANTERN_TEST_QPASSWORD}
      - LANTERN_CAPQUERY_QNAME=${LANTERN_TEST_QNAME}
      - LANTERN_ENDPTINFO_CAPQUERY_QNAME=${LANTERN_TEST_ENDPTINFO_CAPQUERY_QNAME}

  lantern-e2e:
    container_name: lantern-e2e
    environment:
      - LANTERN_DBHOST=postgres
      - LANTERN_QHOST=lantern-mq
      - LANTERN_CHPLAPIKEY=${LANTERN_CHPLAPIKEY}
      - LANTERN_TEST_ENDPTINFO_CAPQUERY_QNAME=${LANTERN_TEST_ENDPTINFO_CAPQUERY_QNAME}
    build:
      args:
        cert_dir: ./certs
      context: ./e2e
    volumes:
      - ./scripts/wait-for-it.sh:/etc/lantern/wait-for-it.sh
    command: /etc/lantern/wait-for-it.sh postgres:5432 -- /etc/lantern/wait-for-it.sh lantern-mq:15672 -- /etc/lantern/wait-for-it.sh lantern-mq:5672 -- go test -v -tags=e2e ./...
